name: Static Analysis

on:
  workflow_call:
    secrets:
      API_KEY:
        required: true

env:
  JAVA_VERSION: 17
  GRADLE_VERSION: 8.7
  RUBY_VERSION: 3.1.3

permissions:
  pull-requests: write
  contents: read
  checks: write

jobs:
  analysis:
    name: Static Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Set up local properties
        run: echo "API_KEY=${{ secrets.API_KEY }}" > local.properties

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Run Gradle Build
        run: ./gradlew build

      - name: Restore Gradle Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Cache Android SDK
        uses: actions/cache@v4
        with:
          path: ~/.android/avd
          key: ${{ runner.os }}-android-sdk-${{ hashFiles('**/avd-manager.json') }}
          restore-keys: |
            ${{ runner.os }}-android-sdk-

      - name: Cache Android Build Cache
        uses: actions/cache@v4
        with:
          path: ~/.android/build-cache
          key: ${{ runner.os }}-android-build-cache-${{ hashFiles('**/*.gradle*', '**/gradle.properties') }}
          restore-keys: |
            ${{ runner.os }}-android-build-cache-


      - name: Run Lint
        run: ./gradlew lint

      - name: Check and Report Lint Results
        uses: hidakatsuya/action-report-android-lint@v1.2.0
        with:
          result-path: 'app/build/reports/lint-results-debug.xml'

      - name: Build with Gradle
        run: ./gradlew build --parallel --configure-on-demand

      - name: Run Unit Tests
        run: ./gradlew testDebugUnitTest --parallel

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: always()
        with:
          report_paths: '**/build/test-results/testDebugUnitTest/TEST-*.xml'

  ktlint:
    name: Ktlint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Run Ktlint
        uses: ScaCap/action-ktlint@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review
